services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.1
    environment: 
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
  
  enricher:
    image: golang:1.22
    build:
      context: .
    ports:
      - 8080:8080
    volumes:
      - ./enricher-consumer:/app
    working_dir: /app
    command: go run main.go
    environment:
      KAFKA_BROKER: kafka:9092
      POLLING_INTERVAL: 5
      STORER_KAFKA_TOPIC: storer
      ENRICHER_KAFKA_TOPIC: enricher
    depends_on:
      - kafka
      - init-kafka
  
  storer:
    image: golang:1.22
    build:
      context: .
    ports:
      - 8081:8081
    volumes:
      - ./storage-consumer:/app
    working_dir: /app
    command: go run main.go
    environment:
      KAFKA_BROKER: kafka:9092
      POLLING_INTERVAL: 5
      STORER_KAFKA_TOPIC: storer
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: test
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      CONSUMER_WORKERS: 5
      CONSUMER_GROUP: storer
    depends_on:
      - kafka
      - init-kafka
  
  postgres:
    image: postgres:16.2
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: test
    ports:
      - 5432:5432

  producer: 
    image: golang:1.22
    build:
      context: .
    volumes:
      - ./transaction-producer:/app/producer
    working_dir: /app/producer
    command: go run main.go
    depends_on:
      - kafka
      - init-kafka

  kafka:
    image: confluentinc/cp-kafka:7.6.1
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  init-kafka: 
    image: confluentinc/cp-kafka:7.6.1
    depends_on:
      - kafka
    entrypoint: ["/bin/bash", "-c"]
    command: 
      - "kafka-topics --create --topic enricher --partitions 1 --replication-factor 1 --if-not-exists --zookeeper zookeeper:2181"
      - "kafka-topics --create --topic storer --partitions 1 --replication-factor 1 --if-not-exists --zookeeper zookeeper:2181"
